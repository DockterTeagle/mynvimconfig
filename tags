!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/christopher/.config/nvim/lua/custom/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/35abbb13/
callback	configs/null-ls.lua	/^        callback = function()$/;"	f
codelldb	configs/external/mason-nvim-dap.lua	/^    codelldb = function(config)$/;"	f
config	plugins.lua	/^    config = function ()$/;"	f
config	plugins.lua	/^    config = function (_,opts)$/;"	f
config	plugins.lua	/^    config = function()$/;"	f
config	plugins.lua	/^    config = function(_, _)$/;"	f
config	plugins.lua	/^    config = function(_, opts)$/;"	f
config	plugins.lua	/^    config = function(_,opts)$/;"	f
dart	configs/external/mason-nvim-dap.lua	/^    dart = function(config)$/;"	f
env	plugins.lua	/^        env = function()$/;"	f
event_exited["dapui_config"]	plugins.lua	/^      dap.listeners.before.event_exited["dapui_config"] = function()$/;"	f	unknown:dap.listeners.before
event_initialized["dapui_config"]	plugins.lua	/^      dap.listeners.after.event_initialized["dapui_config"] = function()$/;"	f	unknown:dap.listeners.after
event_terminated["dapui_config"]	plugins.lua	/^      dap.listeners.before.event_terminated["dapui_config"] = function()$/;"	f	unknown:dap.listeners.before
extra_args	configs/null-ls.lua	/^    extra_args = function()$/;"	f
f	LuaSnip/helper-functions.lua	/^local f = ls.function_node$/;"	f
get_visual	LuaSnip/helper-functions.lua	/^function M.get_visual(args, parent)$/;"	f	unknown:M
helpers	LuaSnip/python/enviroments.lua	/^local helpers = require("custom.LuaSnip.helper-functions")$/;"	f
helpers	LuaSnip/tex/enviroments.lua	/^local helpers = require("custom.LuaSnip.helper-functions")$/;"	f
helpers	LuaSnip/tex/equations.lua	/^local helpers = require("custom.LuaSnip.helper-functions")$/;"	f
in_comment	LuaSnip/helper-functions.lua	/^tex_utils.in_comment = function()  -- comment detection$/;"	f	unknown:tex_utils
in_enumerate	LuaSnip/helper-functions.lua	/^tex_utils.in_enumerate = function ()$/;"	f	unknown:tex_utils
in_env	LuaSnip/helper-functions.lua	/^tex_utils.in_env = function(name)  -- generic environment detection$/;"	f	unknown:tex_utils
in_itemize	LuaSnip/helper-functions.lua	/^tex_utils.in_itemize = function()  -- itemize environment detection$/;"	f	unknown:tex_utils
in_mathzone	LuaSnip/helper-functions.lua	/^tex_utils.in_mathzone = function()  -- math context detection$/;"	f	unknown:tex_utils
in_text	LuaSnip/helper-functions.lua	/^tex_utils.in_text = function()$/;"	f	unknown:tex_utils
in_tikz	LuaSnip/helper-functions.lua	/^tex_utils.in_tikz = function()  -- TikZ picture environment detection$/;"	f	unknown:tex_utils
init	plugins.lua	/^    init = function ()$/;"	f
init	plugins.lua	/^    init = function()$/;"	f
on_attach	configs/null-ls.lua	/^  on_attach = function(client, bufnr)$/;"	f
opts	plugins.lua	/^    opts = function ()$/;"	f
opts	plugins.lua	/^    opts = function()$/;"	f
program	plugins.lua	/^        program = function()$/;"	f
python	configs/external/mason-nvim-dap.lua	/^    python = function(config)$/;"	f
